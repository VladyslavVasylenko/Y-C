{"version":3,"sources":["Header/Header.jsx","Main/Block-Search/Form.js","Main/Block-Search/ResultSearch.jsx","Main/Block-Search/Search.js","Main/Block-Instruction/Instruction.jsx","Main/Block-Contact/Contact.js","Main/Block-Chat/Chat.js","App.js","index.js"],"names":["Header","className","href","Form","onSubmit","this","props","searchMethod","type","name","placeholder","Component","ResultSearch","nickname","account_id","global_rating","battles","max_damage","max_frags","max_xp","survived_battles","averageDamage","error","Search","getSearchResult","e","a","preventDefault","target","elements","value","fetch","apiUrl","json","status","console","log","accountId","data","stastistics","resultStastistics","setState","statistics","all","Math","round","damage_dealt","state","id","Instruction","Contact","required","Chat","App","useState","showLinks","setShowLinks","exact","to","activeClassName","onClick","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd11c52c.chunk.js","sourcesContent":["import './style-header.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"conteiner\">\r\n\r\n      <div className=\"content-block\">\r\n        <p className=\"content-block__title\">Рады вас ПРИВЕТСТВОВАТЬ на портале <span className=\"content-block__title--color\"><br/>&#8221;Your Comrade&#8221;</span></p>\r\n        <p className=\"content-block__slogan\">&#10077;В бою нет ничего важнее чем надежный боевой товарищ!&#10078;</p>\r\n        <div className=\"content-block-text\">\r\n          <p className=\"content-block-text__text\">\r\n          <i className=\"fas fa-ellipsis-h\"></i> На данном портале вы сможете подобрать себе боевого товарища. \r\n          </p>\r\n          <p className=\"content-block-text__text\">\r\n          <i className=\"fas fa-ellipsis-h\"></i> Предварительно посмотрев его скилл. Всё что вам нужно знать это: &#8275;его никнейм&#8275;.\r\n          </p>\r\n          <p className=\"content-block-text__text\">\r\n          <i className=\"fas fa-ellipsis-h\"></i> В разделе инструкция вы сможете ознакомится с вспомогательными указателями где?, как искать?, что вводить?\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"scroll\">\r\n        <a href=\"/Search\" className=\"scroll-to\"><i className=\"fas fa-angle-down\"></i></a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React, { Component }  from \"react\";\r\n\r\nclass Form extends Component {\r\n  render() {\r\n    return (\r\n      <form className=\"form-search\" onSubmit={this.props.searchMethod}>\r\n        <input className=\"input-field\" type=\"text\" name=\"nickname\" placeholder=\"Введите никнейм\"/>\r\n        <button className=\"btn\">Search</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form;","import React, { Component } from \"react\";\r\n\r\nclass ResultSearch extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"result\">\r\n        { this.props.nickname &&\r\n          <div className=\"result__box\">\r\n            <p className=\"result__title\">Nickname: <span className=\"result__nickname\">{this.props.nickname}</span></p>\r\n            <p className=\"result__text subtitle\">Account id: <span className=\"result__nickname\">{this.props.account_id}</span></p>\r\n            <div className=\"result-conteiner\">\r\n              <p className=\"result__text\">Личный рейтинг: <span  className=\"result__nickname\">{this.props.global_rating}</span></p>\r\n              <p className=\"result__text\">Количество боёв: <span className=\"result__nickname\">{this.props.battles}</span></p>\r\n              <p className=\"result__text\">Максимальный урон за бой: <span className=\"result__nickname\">{this.props.max_damage}</span></p>\r\n              <p className=\"result__text\">Максимум уничтожено за бой: <span className=\"result__nickname\">{this.props.max_frags}</span></p>\r\n              <p className=\"result__text\">Максимальный опыт за бой: <span className=\"result__nickname\">{this.props.max_xp}</span></p>\r\n              <p className=\"result__text\">Выживаемость: <span className=\"result__nickname\">{this.props.survived_battles}</span></p>\r\n              <p className=\"result__text\">Средний урон: <span className=\"result__nickname\">{this.props.averageDamage}</span></p>\r\n            </div>\r\n          </div>\r\n        }\r\n        <p className=\"result__title\">{this.props.error}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ResultSearch;","import React, { Component } from \"react\";\r\nimport Form from './Form';\r\nimport ResultSearch from './ResultSearch';\r\nimport './index.css';\r\n\r\nconst API_KEY = \"aa1e24b44bb69aac50de3419c0c1ac07\";\r\nconst SEARCH_PARAM = '&search=';\r\n\r\nclass Search extends Component {\r\n  constructor(props) { \r\n    super(props);\r\n    this.state = {\r\n      nickname: null,\r\n      account_id: null,\r\n      global_rating: null,\r\n      battles: null,\r\n      max_damage: null,\r\n      max_frags: null,\r\n      survived_battles: null,\r\n      max_xp: null,\r\n      damage_dealt: null,\r\n      averageDamage: null,\r\n      error: '',\r\n    }\r\n  }\r\n\r\n  getSearchResult = async (e) => {\r\n    e.preventDefault();\r\n    const nickname = e.target.elements.nickname.value;\r\n\r\n    if(nickname) {\r\n      const apiUrl = await fetch(\r\n          `https://api.worldoftanks.ru/wot/account/list/?application_id=${API_KEY}${SEARCH_PARAM}${nickname}`\r\n        );\r\n      const status = await apiUrl.json();\r\n      console.log(status);\r\n\r\n      const accountId = status.data && status.data[0].account_id;\r\n\r\n      const stastistics = await fetch(\r\n        `https://api.worldoftanks.ru/wot/account/info/?application_id=aa1e24b44bb69aac50de3419c0c1ac07&account_id=${accountId}`\r\n      );\r\n      const resultStastistics = await stastistics.json();\r\n      console.log(resultStastistics);\r\n      const errorMessage = \"<p>Внимание игрока с таким ником не зарегистрировано!</p>\";\r\n\r\n      this.setState({\r\n        nickname: status.data && status.data[0].nickname,\r\n        account_id: status.data && status.data[0].account_id,\r\n        global_rating: status.data && resultStastistics.data[accountId].global_rating,\r\n        battles: status.data && resultStastistics.data[accountId].statistics.all.battles,\r\n        max_damage: status.data && resultStastistics.data[accountId].statistics.all.max_damage,\r\n        max_frags: status.data && resultStastistics.data[accountId].statistics.all.max_frags,\r\n        survived_battles: status.data && resultStastistics.data[accountId].statistics.all.survived_battles,\r\n        max_xp: status.data && resultStastistics.data[accountId].statistics.all.max_xp,\r\n        averageDamage: Math.round(resultStastistics.data[accountId].statistics.all.damage_dealt / resultStastistics.data[accountId].statistics.all.battles),\r\n        error: '',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        nickname: null,\r\n        account_id: null,\r\n        global_rating: null,\r\n        battles: null,\r\n        max_damage: null,\r\n        max_frags: null,\r\n        survived_battles: null,\r\n        max_xp: null,\r\n        error: 'Введите никнейм',\r\n      });\r\n    }\r\n\r\n    // if(nickname) {\r\n    //   const apiUrl = await fetch(\r\n    //       `https://api.worldoftanks.ru/wot/account/list/?application_id=${API_KEY}${SEARCH_PARAM}${nickname}`\r\n    //     );\r\n    //   const status = await apiUrl.json();\r\n\r\n    //   const accountId = status.data && status.data[0].account_id;\r\n\r\n    //   if (accountId) {\r\n    //     const stastistics = await fetch(\r\n    //       `https://api.worldoftanks.ru/wot/account/info/?application_id=aa1e24b44bb69aac50de3419c0c1ac07&account_id=${accountId}`\r\n    //     );\r\n    //     const resultStastistics = await stastistics.json();\r\n    //     if (status.data.length > 0) {\r\n          // const { global_rating, statistics } = resultStastistics;\r\n    //       this.setState({\r\n    //         nickname: status.data[0].nickname,\r\n    //         account_id: status.data[0].account_id,\r\n    //         global_rating: resultStastistics.data[accountId].global_rating,\r\n    //         battles: resultStastistics.data[accountId].statistics.all.battles,\r\n    //         max_damage: resultStastistics.data[accountId].statistics.all.max_damage,\r\n    //         max_frags: resultStastistics.data[accountId].statistics.all.max_frags,\r\n    //         survived_battles: resultStastistics.data[accountId].statistics.all.survived_battles,\r\n    //         max_xp: resultStastistics.data[accountId].statistics.all.max_xp,\r\n    //         damage_dealt: resultStastistics.data[accountId].statistics.all.damage_dealt,\r\n    //         averageDamage: Math.round(resultStastistics.data[accountId].statistics.all.damage_dealt / resultStastistics.data[accountId].statistics.all.battles),\r\n    //         error: ''\r\n    //       });\r\n    //     } else {\r\n    //         this.setState({\r\n    //           error: 'Not found'\r\n    //         });\r\n    //       }\r\n    //     }\r\n    //   }\r\n    }\r\n    \r\n  render() {\r\n    // const errorMessage = \r\n    //   <div className=\"result\">\r\n    //     <div className=\"result__box\">\r\n    //       <p className=\"result__title\">Внимание игрока с таким ником не зарегистрировано!</p>\r\n    //     </div>\r\n    //   </div>;\r\n    return (\r\n      <>\r\n        <div className=\"search__conteiner\" id=\"Search\">\r\n          <Form searchMethod={this.getSearchResult} />\r\n          <ResultSearch \r\n            nickname={this.state.nickname}\r\n            account_id={this.state.account_id}\r\n            global_rating={this.state.global_rating}\r\n            battles={this.state.battles}\r\n            max_damage={this.state.max_damage}\r\n            max_frags={this.state.max_frags}\r\n            survived_battles={this.state.survived_battles}\r\n            max_xp={this.state.max_xp}\r\n            averageDamage={this.state.averageDamage}\r\n            error={this.state.error}\r\n            />\r\n        </div>\r\n        {/* <div className=\"search__conteiner\" id=\"Search\">\r\n          <Form searchMethod={this.getSearchResult} />\r\n          {this.state.account_id && (<ResultSearch \r\n              nickname={this.state.nickname}\r\n              account_id={this.state.account_id} \r\n              global_rating={this.state.global_rating}\r\n              battles={this.state.battles}\r\n              max_damage={this.state.max_damage}\r\n              max_frags={this.state.max_frags}\r\n              survived_battles={this.state.survived_battles}\r\n              max_xp={this.state.max_xp}\r\n              averageDamage={this.state.averageDamage}\r\n              error={this.state.error}\r\n            />\r\n          )}\r\n          {this.state.error == 'Not found' && errorMessage}\r\n        </div> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;","import './style-instuction.css';\r\n\r\nfunction Instruction () {\r\n  return(\r\n    <div className=\"instuction\" id=\"Instruction\">\r\n      <h1 className=\"instuction__title\">Инструкция</h1>\r\n      <ul className=\"instuction__list\">\r\n        <li className=\"instuction__item\"><i className=\"fas fa-tools\"></i> В разделе &#8275;Раздел Поиска&#8275; в поле для ввода, введите Никнейм игрока которого хотите посмотреть статистику.</li>\r\n        <li className=\"instuction__item\"><i className=\"fas fa-tools\"></i> В конце информации об игроке у вас будет возможность сохранить его в избранные. В дальнейшем в &#8275;Разделе Избранные&#8275; сможете посмотреть сохраненных игроков и связаться с ними в игре.</li>\r\n        <li className=\"instuction__item\"><i className=\"fas fa-tools\"></i> Прошу обратить внимание поиск игроков учитывает строгое написание никнейма игрока если идет названия с большой буквы нужно так и вводить.</li>\r\n        <li className=\"instuction__item\"><i className=\"fas fa-tools\"></i> Статистика игрока выводиться согласно данных полученных с игры &#8275;WORLD OF TANKS&#8275; Данная информация отвечает реальной статистики игры игрока и мы никак не можем на ее влиять.</li>\r\n        <li className=\"instuction__item\"><i className=\"fas fa-tools\"></i> Рекомендуем обратить внимание на общий рейтинг от &#8275;World of Tanks &#8275; если меньше 4000 при боях более 1000 этот игрок только начал играть и розберается в игре. Рекомендуем играть с игроками у которых рейтинг от 4000.</li>\r\n        <li className=\"instuction__item\"><i className=\"fas fa-tools\"></i> Рекомендуется обращать внимание на средний урон и выживаемость в боях.</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Instruction;","import './contact.css';\r\n\r\nfunction Contact() {\r\n  return (\r\n    <div className=\"contact\" id=\"Contact\">\r\n      <div className=\"conteiner-contact\">\r\n        <p className=\"contact__mail\"><a className=\"contact__mail\" href=\"https://www.google.com/intl/uk/gmail/about/\" target=\"blank\">vladyslavvasylenko03@gmail.com</a></p>\r\n        <p className=\"contact__phone\"><a className=\"contact__phone\" href=\"tel:++380668047228\">+380668047228</a></p>\r\n        <p className=\"contact__inst\"><a href=\"https://www.instagram.com/vladyslavvasylenko0312/\" target=\"blank\"><i className=\"fab fa-instagram\"></i></a></p>\r\n        <p className=\"contact__In\"><a href=\"https://www.linkedin.com/in/vladyslav-vasylenko-5600301a6/\" target=\"blank\"><i className=\"fab fa-linkedin-in\"></i></a></p>\r\n      </div>\r\n\r\n      <div className=\"container-form\">\r\n        <form className=\"form\">\r\n          <input className=\"form__message\" type=\"text\" name=\"message\" placeholder=\"Ваше сообщение\" required />\r\n          <button className=\"form__btn\">Отправить</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;","import './style-chat.css';\r\n\r\nfunction Chat() {\r\n  return (\r\n    <div className=\"chat\">\r\n      <p className=\"chat__title\">Ожидается в скором времени!</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;","import Header from './Header/Header';\r\nimport Search from './Main/Block-Search/Search';\r\nimport Instruction from './Main/Block-Instruction/Instruction';\r\nimport Contact from './Main/Block-Contact/Contact';\r\nimport Chat from './Main/Block-Chat/Chat';\r\nimport React, {useState} from 'react';\r\n\r\nimport {BrowserRouter as Router, Switch, Route, NavLink} from 'react-router-dom';\r\n\r\nfunction App() {\r\n  const [showLinks, setShowLinks] = useState(true);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <div className=\"navbar\">\r\n          <div className=\"center-menu\">\r\n            <nav className=\"navbar__list\" id={showLinks ? \"hidden\" : \"\"}>\r\n              <NavLink exact to=\"/\" className=\"header__item\" activeClassName=\"active\">Привествие</NavLink>\r\n              <NavLink to=\"/Instruction\" className=\"header__item\" activeClassName=\"active\">Инструкция</NavLink>\r\n              <NavLink to=\"/Search\" className=\"header__item\" activeClassName=\"active\">Поиск</NavLink>\r\n              <NavLink to=\"/Chat\" className=\"header__item\" activeClassName=\"active\">Чат</NavLink>\r\n              <NavLink to=\"/Contact\" className=\"header__item\" activeClassName=\"active\">Контакты</NavLink>\r\n            </nav>\r\n            <div onClick={() => setShowLinks(!showLinks)} className=\"navbar__btn\">\r\n            <i className=\"fas fa-bars\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"header\">\r\n          <nav className=\"header__list\">\r\n            <NavLink exact to=\"/\" className=\"header__item\" activeClassName=\"active\">Привествие</NavLink>\r\n            <NavLink to=\"/Instruction\" className=\"header__item\" activeClassName=\"active\">Инструкция</NavLink>\r\n            <NavLink to=\"/Search\" className=\"header__item\" activeClassName=\"active\">Поиск</NavLink>\r\n            <NavLink to=\"/Chat\" className=\"header__item\" activeClassName=\"active\">Чат</NavLink>\r\n            <NavLink to=\"/Contact\" className=\"header__item\" activeClassName=\"active\">Контакты</NavLink>\r\n          </nav>\r\n        </div>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Header}/>\r\n          <Route path=\"/Search\" component={Search}/>\r\n          <Route path=\"/Instruction\" component={Instruction}/>\r\n          <Route path=\"/Chat\" component={Chat}/>\r\n          <Route path=\"/Contact\" component={Contact}/>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}